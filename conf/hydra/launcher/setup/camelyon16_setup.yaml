- set -e

- echo "Loading modules"
# TODO: remove this hacky relative path finding
- source ${hydra.runtime.config_sources.1.path}/../load-asap.sh

# Multi-node copy util
- module load mpicopy/4.2-gompi-2020a OpenMPI/4.0.3-gcccuda-2020a # reload OpenMPI from gcccuda to preserve GPUDirect

- echo "Setting environment variables"
- export OMP_NUM_THREADS=6
- export PYTHONFAULTHANDLER=1
- export NCCL_DEBUG=INFO
- export NCCL_ASYNC_ERROR_HANDLING=1

- INDIR="$TMPDIR"
- DATASET_NAME=${path.stem:${oc.env:CAMELYON16_PATH}}

- if [[ -d ${oc.env:CAMELYON16_PATH} ]]; then
- echo "Detected folder ${oc.env:CAMELYON16_PATH}, skipping copy"
- elif [[ -f ${oc.env:CAMELYON16_PATH} ]]; then
- echo "Detected file ${oc.env:CAMELYON16_PATH}, assuming .tar; copy+untar"
- mpicopy -v "${oc.env:CAMELYON16_PATH}" -o "$INDIR"
- srun --tasks-per-node=1 tar -xkf "$INDIR"/"$DATASET_NAME".tar -C "$INDIR"

# This line only works because hydra resolves the config lazily
- export CAMELYON16_PATH="$INDIR"/${path.stem:${oc.env:CAMELYON16_PATH}}

- else
- echo "${oc.env:CAMELYON16_PATH} is not a valid file"
- exit 1
- fi

